from email.mime.text import MIMEText
from email.mime.application import MIMEApplication
from email.mime.multipart import MIMEMultipart
import json
import boto3
import pyotp
import time
import string
import random

createUser = True
changePassword = True
autoGeneratedPassword = True
createMFA = True

infraUserNeedsMFA = False
infraUserMFASerialNumber = "arn:aws:iam::XXXXXXXXXXXXXXXX:user/infraws.dakinci"
infraUserMFACode = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"


username = "doruk.akinci"
password = "Ab123456+"
profile = "my_profile_name"
accountName = "ACCOUNT_NAME"


if autoGeneratedPassword:
    secure_random = random.SystemRandom()
    alphabet = string.ascii_letters + string.digits + string.punctuation
    while True:
        password = ''.join(secure_random.choice(alphabet) for i in range(10))
        if (any(c.islower() for c in password)
                and any(c.isupper() for c in password)
                and any(c in string.punctuation for c in password)
                and sum(c.isdigit() for c in password) >= 3):
            break

print ("Password: " + password)

# via http://codeadict.wordpress.com/2010/02/11/send-e-mails-with-attachment-in-python/
msg = MIMEMultipart()
msg['Subject'] = 'AWS ' + accountName + ' Account - Username ' + username + ' is created.'
msg['From'] = 'PDOITINFRAWEBSERVICE@digiturk.com.tr'#'pyusercreator@digiturk.com.tr'
msg['To'] = username+'@digiturk.com.tr'
msg['Cc'] = 'PDOITINFRAWEBSERVICE@digiturk.com.tr'

# what a recipient sees if they don't use an email reader
msg.preamble = 'Multipart message.\n'

# the message body

session = boto3.Session(profile_name = profile)
if(infraUserNeedsMFA):
    sts = session.client('sts')

    totp = pyotp.TOTP(infraUserMFACode)
    getSession = sts.get_session_token(
        DurationSeconds=900,
        SerialNumber=infraUserMFASerialNumber,
        TokenCode=totp.now()
    )
    session = boto3.Session(getSession["Credentials"]["AccessKeyId"], getSession["Credentials"]["SecretAccessKey"], getSession["Credentials"]["SessionToken"])    

iam = session.client('iam')

try:
    if(createUser):
        iam.create_user(UserName=username)
    if(changePassword):        
        iam.create_login_profile(
            Password=password,
            PasswordResetRequired=True,
            UserName=username,
        )
except:
    if(changePassword):
        iam.update_login_profile(
            UserName=username,
            Password=password,
            PasswordResetRequired=True
        )

if(createMFA):
    response = iam.create_virtual_mfa_device(
        VirtualMFADeviceName=username+"vdevice"
    )

    totp = pyotp.TOTP(response["VirtualMFADevice"]["Base32StringSeed"])

    code1= totp.now()
    print(code1)
    time.sleep(30)
    code2 = totp.now()
    print(code2)

    iam.enable_mfa_device(
        UserName=username,
        SerialNumber=response["VirtualMFADevice"]["SerialNumber"],
        AuthenticationCode1=code1,
        AuthenticationCode2=code2
    )

part = MIMEText('Username ' + username + ' is created. Password is '+ password + " Console Login: https://"+accountName+".signin.aws.amazon.com/console")
msg.attach(part)
# the attachment
if(createMFA):
    part = MIMEApplication(response["VirtualMFADevice"]["QRCodePNG"])
    part.add_header('Content-Disposition', 'attachment', filename='QRCode.png')
    msg.attach(part)

# connect to SES   ACCESS KEY PARAMETERS MUST BE CHANGED
ses = boto3.client('ses', aws_access_key_id= 'XXXXXXXXXXXXXXXXXXXXXXXXXXX'
    , aws_secret_access_key= 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', region_name='us-east-1')

# and send the message
result = ses.send_raw_email(RawMessage={'Data': msg.as_string()}
    , Source=msg['From']
)

print(result)